@using Assignment_CS5.Models
@using Microsoft.AspNetCore.Http
@using Microsoft.AspNetCore.Http.Extensions
@using Assignment_CS5.Constants

@model IEnumerable<Assignment_CS5.ViewModels.ViewCart>

@{
    string cusEmail = Context.Session.GetString(SessionKey.Customer.CusEmail);
    string cusName = Context.Session.GetString(SessionKey.Customer.CusFullName);
    string emp = Context.Session.GetString(SessionKey.Employee.UserName);
    string cart = Context.Session.GetString("cart");

}
<!-- SweetAlert CDN -->
<link rel="stylesheet" href="https://unpkg.com/sweetalert/dist/sweetalert.css">
<script src="https://unpkg.com/sweetalert/dist/sweetalert.min.js"></script>





<div style="margin-top:170px">

    <div class="row m-5 justify-content-center">
        <h1>Cart</h1>
    </div>

    <div class="row m-5">
        <table class="table text-light mt-5">
            <thead>
                <tr>
                    <th>STT</th>
                    <th>Image</th>
                    <th>Name</th>
                    <th>Quantity</th>
                    <th>Price</th>
                    <th>Total</th>
                    <th>Note</th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @{
                    int stt = 0;
                    double total = 0;
                    foreach(var item in Model)
                    {
                        int id = item.Menu.ProductId;
                        string txt_Id = "txtQuantity_" + id;
                        stt++;
                        double totalSub = item.Menu.Price * item.Quantity;
                        total += totalSub;

                        <tr id="row_@id">
                            <td>@stt</td>
                            <td><img src="~/images/products/@item.Menu.Image" class="img-thumbnail img-150" /></td>
                            <td>@item.Menu.Name</td>
                            <td><input class="form-control" type="number" min="0" step="1" id="@txt_Id" value="@item.Quantity" onchange="updateCart(@id)" /></td>
                            <td id="cellPrice_@id">@String.Format("{0:0,0 VNĐ}", item.Menu.Price)</td>
                            <td id="cellTotal_@id">@String.Format("{0:0,0 VNĐ}", totalSub)</td>
                            <td><textarea class="form-control" id="cellNote_@id" onkeyup="updateCart(@id)" onchange="updateCart(@id)">@item.Note</textarea></td>
                            <td>
                                <a class="nav-link btn-outline-primary link-edit" href="javascript:deleteCart(@id)">Delete</a>
                            </td>

                        </tr>
                    }
                }
                <tr >
                    <th colspan="5" class="text-right">Total:</th>
                    <td id="totalCart">@String.Format("{0:0,0 VNĐ}", total)</td>
                </tr>
            </tbody>
        </table>

        <div class="w-100 text-center">
                <div  style="height:50px; width:30%; margin:auto;">
                @{
                    if (!String.IsNullOrEmpty(cusEmail))
                    {
                        <a class="nav-link btn-outline-primary link-edit w-100 h-100 " href="javascript:orderCart(true);">Order confirmation</a>
                        <a class="nav-link btn-outline-primary link-edit w-100 h-100 " href="javascript:orderByPaypal(true);">Paypal</a>
                    }
                    else if (!String.IsNullOrEmpty(emp))
                    {
                        <a class="nav-link btn-outline-primary link-edit w-100 h-100 disabled">Order confirmation</a>
                        <span class="text-danger mt-2">Please log in to your customer account to place an order</span>
                    }
                    else if(cart == "[]" || String.IsNullOrEmpty(cart))
                    {
                        <a class="nav-link btn-outline-primary link-edit w-100 h-100 disabled">Order confirmation</a>
                        <span class="text-danger mt-2">Your cart is empty !</span>
                    }
                    else
                    {
                        <a class="nav-link btn-outline-primary link-edit w-100 h-100 disabled">Order confirmation</a>
                        <span class="text-danger mt-2">You need to log in before placing an order</span>
                    }

                }
                </div>
        </div>
</div>

<script>
        function deleteCart(id) {
            $.ajax({
                type: "POST",
                url: "/Home/DeleteCart",
                data: {
                    id: id
                },
                success: function (result) {
                    $("#row_" + id).hide(); // Sử dụng selector đúng để ẩn hàng hóa
                    $("#totalCart").html(formatCurrency(result)); // Sử dụng selector đúng để cập nhật tổng giỏ hàng

                    if (result == "0") {
                        $("#cart-status").attr("class", "bi bi-basket3");
                    }
                }
            });
        }


        function updateCart(id) {
            var amount = parseFloat($("#txtQuantity_" + id).val());
            var price = parseFloat($("#cellPrice_" + id).text());
            var note = $("#cellNote_" + id).val();
            var total = amount * (price+"000");


            $("#cellTotal_" + id).html(formatCurrency(total));
            if (amount == 0) {
                var confirmDelete = confirm("Do you want to remove this dish from the cart?");
                if (confirmDelete){
                    deleteCart(id);
                }else{
                    $("#txtQuantity_" + id).val(1);
                    var amount = parseFloat($("#txtQuantity_" + id).val());
                    var price = parseFloat($("#cellPrice_" + id).text());
                    var total = amount * (price + "000");   
                    $("#cellTotal_" + id).html(formatCurrency(total));
                } 
            }
            $.ajax({
                type: "POST",
                url: "/Home/UpdateCart",
                data: {
                     id: id,
                    quantity: amount,
                    note: note
                },
                success: function (result) {
                    if (!isNaN(result) && result >= 0) {
                        $("#totalCart").html(formatCurrency(result));
                    }

                    if (result == "0") {
                        $("#cart-status").attr("class", "bi bi-basket3");
                    }
                }
            });
        }


        function formatCurrency(value) {
            const formatter = new Intl.NumberFormat("vi-VN");
            return formatter.format(value) + " VNĐ";
        }





        function orderCart(flagLogin) {
            if (!flagLogin) {
                alert("Bạn cần đăng nhập để đặt hàng.");
            return false;
            }

            $.ajax({
                type: "POST",
                url: "/Home/OrderCart",
                data: {},
                success: function (result) {
            if (result.success) {
                window.location = "/Order/History";
            } else {
                swal("Infomation", result.message, "error"); // Hiển thị thông báo lỗi
            }
            },

            });
        }


        function orderByPaypal(flagLogin) {
            if (!flagLogin) {
                alert("Bạn cần đăng nhập để đặt hàng.");
                return false;
            }

            $.ajax({
                type: "POST",
                url: "/Home/CreatePaymentUrl",
                data: {},
                success: function (result) {
                    if (result.success) {
                        window.location = "/Order/History";
                    } else {
                        swal("Infomation", result.message, "error"); // Hiển thị thông báo lỗi
                    }
                },

            });
        }



    </script>